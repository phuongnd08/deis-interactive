#!/usr/bin/env ruby

require "thor"
require "shellwords"

class DeisRails < Thor
  desc "console -a APP", "run console on an app"
  method_option :app, aliases: ["a"], type: :string, required: true, desc: "Name of the app"
  def console
    app = options[:app]
    DeisRailsConsole.new(app).run
  end
end

class DeisRailsConsole
  attr_reader :app

  def initialize(app)
    @app = app
  end

  def run
    puts "Run rails console attaching to #{container_id}"
    exec "kubectl exec -it --namespace #{app} #{container_id} -- bash -c #{Shellwords.escape(bash)}"
  end

  def process
    ENV['DEIS_CONSOLE_PROCESS'] || "web"
  end

  def container_id
    @container_id ||= (
      sample_container_id = container_ids.sample
      if (sample_container_id.nil?)
        raise "Error. None container of #{process} is found. kubectl won't be able to attach to run a console session"
      end
      sample_container_id.split("/").last
    )
  end

  def container_ids
    `kubectl get pods --namespace #{app} -o name | grep #{app}-#{process}`.split("\n").reject(&:empty?)
  end

  def bash
    ". /app/.profile.d/ruby.sh && PATH=/app/.heroku/node/bin:$PATH /app/bin/rails c"
  end
end

DeisRails.start(ARGV)
