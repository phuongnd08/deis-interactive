#!/usr/bin/env ruby

require "thor"

class DeisRails < Thor
  desc "console -a APP", "run console on an app"
  method_option :app, aliases: ["a"], type: :string, required: true, desc: "Name of the app"
  def console
    require_relative "../lib/deis-interactive/rails/console"
    app = options[:app]
    DeisInteractive::Rails::Console.new(app).perform
  end

  desc "exec -a APP COMMAND PARAMS", "run any command on an app"
  method_option :app, aliases: ["a"], type: :string, required: true, desc: "Name of the app"
  def exec(command, *params)
    require_relative "../lib/deis-interactive/rails/exec"
    app = options[:app]
    DeisInteractive::Rails::Exec.new(app, command, params).perform
  end

  desc "logs [-n COUNT] [-f] -a APP [-d PROCESS]", "logs on an app"
  method_option :app, aliases: ["a"], type: :string, required: true, desc: "Name of the app"
  method_option :process, aliases: ["p"], type: :string, required: false, desc: "Processes to be logged on"
  method_option :follow, aliases: ["f"], type: :boolean, required: false, desc: "Tail the log"
  method_option :count, aliases: ["n"], type: :numeric, required: false, desc: "Number of lines"
  def logs
    require_relative "../lib/deis-interactive/rails/logs"
    app = options[:app]
    process = options[:process]
    follow = options[:follow]
    count = options[:count]
    DeisInteractive::Rails::Logs.new(app, process, follow: follow, count: count).perform
  end
end

DeisRails.start(ARGV)
